package org.kh.java;
//대입 연산자 : 연산 후에 대입하는 연산자 +=, -=, *=, /=, %=, &=, |= ,>>=, <<=, >>>=, <<<=
//비트 연산자 : %(and), |(or) , ~(complemet(not)) , ^(xor),>>같다>>>(right Shift),<<같다<<<(left Shift)
public class Operation7 {

	public static void main(String[] args) {
		int a  = 20; 
		int b  = 15;
		int tmp;
		a += b;  //a=35 , b= 15
		b -= a; // a=35 , b= -20  (b=b-a)  << 저 값을 뒤집고 싶으면 임시기억장치(tmp) 를사용한다
		// a와b의 값을 맞교환
		System.out.println("a="+a);
		System.out.println("b="+b);
		tmp = a;
		a = b;
		b = tmp;
		System.out.println("******교환후******");
		System.out.println("a="+a);
		System.out.println("b="+b);
		// 이트연산자	
		int x = 0b01101;  // x= 1101 y=1011	
		int y = 0b01011;  // x & y = 1001 , x | y = 1111
		System.out.println("x="+Integer.toBinaryString(x));
		System.out.println("y="+Integer.toBinaryString(y));
		System.out.println("x & y : "+Integer.toBinaryString(x & y)); //and
		System.out.println("x | y : "+Integer.toBinaryString(x | y)); //or
		System.out.println("x ^ y : "+Integer.toBinaryString(x ^ y)); //xor <= 서로입력이 다를경우 <2진수연산
		System.out.println("~x"+Integer.toBinaryString(~x)); //Integer=4바이트,32비트
		System.out.println("x >> 2 :"+Integer.toBinaryString(x >> 2)); // 2진수로 했으니 >>2 라는 뜻은 2진수 결과값에서 뒤에서부터 2번 없애준다
		System.out.println("x << 2 :"+Integer.toBinaryString(x << 2));
		
		
	}

}
